version: '1.0.{build}'
image: Visual Studio 2017
only_commits:
  files:
  - src/**
  - '*.sln'
  - appveyor*
init:
- cmd: choco install msbuild-sonarqube-runner -y
assembly_info:
  patch: true
  file: SharedAssemblyInfo.cs
  assembly_version: '{version}'
  assembly_file_version: '{version}'
  assembly_informational_version: '{version}-{branch}'
platform: Any CPU
configuration: Release
environment:
  MyGetApiKey:
    secure: CizkYUzHx4OrHIvpn8X78CkFmfdm0fdjobqoaWD90V2thHbvlrHcghwSsxGZ4/Zw
  MyGetFeed: leblanc-codes
  sonarqube-token:
    secure: qpjAj1eYFBbNIIajmbwTEmRsGnjpiPdWZ7NsyO9B5fYchJdsZrybY+IAh7eVrGUX
  sonarqube-project: LeBlancCodes.PowerShell.Utilities
  sonarqube-org: demosdemon-github
  sonarqube-host: https://sonarcloud.io
build:
  parallel: true
before_build:
- cmd: nuget restore
- cmd: SonarQube.Scanner.MSBuild.exe begin /k:"%sonarqube-project%" /d:sonar.organization="%sonarqube-org%" /d:sonar.host.url="%sonarqube-host%" /d:sonar.cs.nunit.reports="TestResult.xml" /d:sonar.login="%sonarqube-token%"
on_finish:
- cmd: SonarQube.Scanner.MSBuild.exe end /d:sonar.login="%sonarqube-token%"
on_success:
- ps: |
    if ($env:APPVEYOR_REPO_BRANCH -eq 'master' -and [string]::IsNullOrWhiteSpace($env:APPVEYOR_PULL_REQUEST_NUMBER))
    {
    $output = "$env:APPVEYOR_BUILD_FOLDER\LeBlancCodes.PowerShell.Utilities\bin\$env:CONFIGURATION"
    $manifest = Join-Path $output "LeBlancCodes.PowerShell.Utilities.psd1"
    if (-not (Test-Path $manifest))
    {
      Write-Error "Missing Manifest"
      Exit 1
    }
    (Get-Content $manifest -Raw).Replace("'1.0.0.0'", "'{0}'" -f $env:APPVEYOR_BUILD_VERSION) | Out-File $manifest

    $repo = Get-PSRepository -Name $env:MyGetFeed -ErrorAction SilentlyContinue
    if ($repo -eq $null)
    {
      $SourceLocation = 'https://www.myget.org/F/{0}/api/v2' -f $env:MyGetFeed
      $PublishLocation = '{0}/package' -f $SourceLocation
      Register-PSRepository -Name $env:MyGetFeed -SourceLocation $SourceLocation -PublishLocation $PublishLocation -Verbose
    }
    
    # These values were previously passed to Publish-Module, but it gives out warnings now and does not use them
    # $repo = "https://github.com/$env:APPVEYOR_REPO_NAME"
    # $license = "$repo/blob/master/LICENSE"
    Publish-Module -Repository $env:MyGetFeed -Name $manifest -NuGetApiKey $env:MyGetApiKey -Verbose
    }
